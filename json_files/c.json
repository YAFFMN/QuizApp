[
    {
        "question": "Which keyword is used to define a variable in C?",
        "option_1": "var",
        "option_2": "let",
        "option_3": "int",
        "option_4": "define",
        "answer": "int"
    },
    {
        "question": "Which function is used to print output to the console in C?",
        "option_1": "printf()",
        "option_2": "cout()",
        "option_3": "echo()",
        "option_4": "print()",
        "answer": "printf()"
    },
    {
        "question": "What is the correct syntax for a single-line comment in C?",
        "option_1": "// This is a comment",
        "option_2": "/* This is a comment */",
        "option_3": "# This is a comment",
        "option_4": "-- This is a comment",
        "answer": "// This is a comment"
    },
    {
        "question": "Which of the following is the correct way to declare an array in C?",
        "option_1": "int arr[] = {1, 2, 3};",
        "option_2": "array arr = {1, 2, 3};",
        "option_3": "int[] arr = {1, 2, 3};",
        "option_4": "list arr = {1, 2, 3};",
        "answer": "int arr[] = {1, 2, 3};"
    },
    {
        "question": "Which of the following data types is used to store characters in C?",
        "option_1": "char",
        "option_2": "string",
        "option_3": "int",
        "option_4": "float",
        "answer": "char"
    },
    {
        "question": "What is the size of the 'int' data type in C?",
        "option_1": "4 bytes",
        "option_2": "2 bytes",
        "option_3": "8 bytes",
        "option_4": "1 byte",
        "answer": "4 bytes"
    },
    {
        "question": "Which operator is used to access the address of a variable in C?",
        "option_1": "&",
        "option_2": "*",
        "option_3": "#",
        "option_4": "%",
        "answer": "&"
    },
    {
        "question": "Which function is used to read input from the user in C?",
        "option_1": "scanf()",
        "option_2": "input()",
        "option_3": "cin()",
        "option_4": "get()",
        "answer": "scanf()"
    },
    {
        "question": "Which keyword is used to define a constant in C?",
        "option_1": "const",
        "option_2": "final",
        "option_3": "define",
        "option_4": "static",
        "answer": "const"
    },
    {
        "question": "Which of the following is the correct syntax for a function declaration in C?",
        "option_1": "int functionName(int arg);",
        "option_2": "function int functionName(int arg);",
        "option_3": "int functionName[arg];",
        "option_4": "func int functionName(int arg);",
        "answer": "int functionName(int arg);"
    },
    {
        "question": "Which keyword is used to exit a loop prematurely in C?",
        "option_1": "break",
        "option_2": "exit",
        "option_3": "return",
        "option_4": "stop",
        "answer": "break"
    },
    {
        "question": "Which operator is used for logical AND in C?",
        "option_1": "&&",
        "option_2": "||",
        "option_3": "&",
        "option_4": "|",
        "answer": "&&"
    },
    {
        "question": "Which of the following is a valid header file in C?",
        "option_1": "<stdio.h>",
        "option_2": "<iostream>",
        "option_3": "<file.h>",
        "option_4": "<system.h>",
        "answer": "<stdio.h>"
    },
    {
        "question": "Which function is used to terminate the program in C?",
        "option_1": "exit()",
        "option_2": "terminate()",
        "option_3": "stop()",
        "option_4": "quit()",
        "answer": "exit()"
    },
    {
        "question": "What is the return type of the 'main' function in C?",
        "option_1": "int",
        "option_2": "void",
        "option_3": "main",
        "option_4": "char",
        "answer": "int"
    },
    {
        "question": "What is the purpose of the 'return' statement in C?",
        "option_1": "It exits a function and returns a value.",
        "option_2": "It repeats a loop.",
        "option_3": "It pauses the program.",
        "option_4": "It declares a variable.",
        "answer": "It exits a function and returns a value."
    },
    {
        "question": "Which format specifier is used to print an integer in C?",
        "option_1": "%d",
        "option_2": "%f",
        "option_3": "%s",
        "option_4": "%c",
        "answer": "%d"
    },
    {
        "question": "Which of the following is the correct way to declare a pointer in C?",
        "option_1": "int *ptr;",
        "option_2": "int ptr*;",
        "option_3": "ptr int*;",
        "option_4": "int ptr;",
        "answer": "int *ptr;"
    },
    {
        "question": "What is the output of 'sizeof(char)' in C?",
        "option_1": "1 byte",
        "option_2": "2 bytes",
        "option_3": "4 bytes",
        "option_4": "8 bytes",
        "answer": "1 byte"
    },
    {
        "question": "Which keyword is used to define a structure in C?",
        "option_1": "struct",
        "option_2": "class",
        "option_3": "enum",
        "option_4": "typedef",
        "answer": "struct"
    },
    {
        "question": "Which of the following is the correct way to allocate memory dynamically in C?",
        "option_1": "malloc()",
        "option_2": "new()",
        "option_3": "allocate()",
        "option_4": "malloc()",
        "answer": "malloc()"
    },
    {
        "question": "What is the correct way to free dynamically allocated memory in C?",
        "option_1": "free()",
        "option_2": "delete()",
        "option_3": "release()",
        "option_4": "clear()",
        "answer": "free()"
    },
    {
        "question": "What is the correct syntax for a 'for' loop in C?",
        "option_1": "for (initialization; condition; increment)",
        "option_2": "for (intialization increment condition)",
        "option_3": "for {condition; initialization; increment}",
        "option_4": "for loop (initialization; condition; increment)",
        "answer": "for (initialization; condition; increment)"
    },
    {
        "question": "Which operator is used to dereference a pointer in C?",
        "option_1": "*",
        "option_2": "&",
        "option_3": "#",
        "option_4": "->",
        "answer": "*"
    },
    {
        "question": "What does 'EOF' represent in C?",
        "option_1": "End of File",
        "option_2": "Error of Function",
        "option_3": "Element Out of Frame",
        "option_4": "Exit on Fail",
        "answer": "End of File"
    },
    {
        "question": "Which keyword is used to create an alias for a data type in C?",
        "option_1": "typedef",
        "option_2": "alias",
        "option_3": "enum",
        "option_4": "struct",
        "answer": "typedef"
    },
    {
        "question": "What is the value of the logical expression '1 && 0' in C?",
        "option_1": "0",
        "option_2": "1",
        "option_3": "True",
        "option_4": "False",
        "answer": "0"
    },
    {
        "question": "What is the correct format specifier for a character in C?",
        "option_1": "%c",
        "option_2": "%d",
        "option_3": "%f",
        "option_4": "%s",
        "answer": "%c"
    },
    {
        "question": "Which library function is used to compare two strings in C?",
        "option_1": "strcmp()",
        "option_2": "strlen()",
        "option_3": "strcat()",
        "option_4": "strcpy()",
        "answer": "strcmp()"
    },
    {
        "question": "Which keyword is used to skip the current iteration of a loop in C?",
        "option_1": "continue",
        "option_2": "break",
        "option_3": "return",
        "option_4": "exit",
        "answer": "continue"
    },
    {
        "question": "What is the purpose of the 'sizeof' operator in C?",
        "option_1": "To get the size of a data type or variable",
        "option_2": "To perform arithmetic operations",
        "option_3": "To define constants",
        "option_4": "To allocate memory",
        "answer": "To get the size of a data type or variable"
    },
    {
        "question": "Which of the following is the correct syntax for a 'while' loop in C?",
        "option_1": "while (condition) { // code }",
        "option_2": "while {condition} // code",
        "option_3": "while (condition) // code",
        "option_4": "while [condition] { // code }",
        "answer": "while (condition) { // code }"
    },
    {
        "question": "What is the output of 'printf(\"%d\", 5 + 3);' in C?",
        "option_1": "8",
        "option_2": "5 + 3",
        "option_3": "Error",
        "option_4": "8.0",
        "answer": "8"
    },
    {
        "question": "What is the role of the 'main' function in C?",
        "option_1": "It is the entry point of a C program.",
        "option_2": "It defines a class.",
        "option_3": "It creates a loop.",
        "option_4": "It manages memory.",
        "answer": "It is the entry point of a C program."
    },
    {
        "question": "What is the output of the following code: 'int a = 5; printf(\"%d\", a++);'?",
        "option_1": "5",
        "option_2": "6",
        "option_3": "Error",
        "option_4": "a++",
        "answer": "5"
    },
    {
        "question": "What is a 'null pointer' in C?",
        "option_1": "A pointer that points to nothing.",
        "option_2": "A pointer that points to an integer.",
        "option_3": "A pointer that points to a string.",
        "option_4": "A pointer that points to a function.",
        "answer": "A pointer that points to nothing."
    },
    {
        "question": "Which function is used to get the length of a string in C?",
        "option_1": "strlen()",
        "option_2": "strlength()",
        "option_3": "length()",
        "option_4": "getlength()",
        "answer": "strlen()"
    },
    {
        "question": "What is the purpose of the 'break' statement in C?",
        "option_1": "To exit from a loop or switch statement.",
        "option_2": "To skip the current iteration.",
        "option_3": "To define a function.",
        "option_4": "To pause execution.",
        "answer": "To exit from a loop or switch statement."
    },
    {
        "question": "Which of the following is a correct way to declare a structure variable?",
        "option_1": "struct Person p;",
        "option_2": "Person p;",
        "option_3": "struct p;",
        "option_4": "var Person p;",
        "answer": "struct Person p;"
    },
    {
        "question": "Which of the following is the correct syntax for a switch statement?",
        "option_1": "switch (expression) { case value: // code }",
        "option_2": "switch expression { case value: // code }",
        "option_3": "switch (expression) case value: // code",
        "option_4": "switch { expression case value: // code }",
        "answer": "switch (expression) { case value: // code }"
    },
    {
        "question": "What does the 'return 0;' statement signify in the main function?",
        "option_1": "The program terminated successfully.",
        "option_2": "The program failed.",
        "option_3": "It indicates an error.",
        "option_4": "It restarts the program.",
        "answer": "The program terminated successfully."
    },
    {
        "question": "Which of the following is used to allocate memory for an array of integers?",
        "option_1": "malloc(sizeof(int) * n)",
        "option_2": "new int[n]",
        "option_3": "alloc(int, n)",
        "option_4": "create(int, n)",
        "answer": "malloc(sizeof(int) * n)"
    },
    {
        "question": "Which operator is used to get the remainder of a division in C?",
        "option_1": "%",
        "option_2": "/",
        "option_3": "//",
        "option_4": "^",
        "answer": "%"
    },
    {
        "question": "What does the 'continue' statement do in a loop?",
        "option_1": "Skips the current iteration.",
        "option_2": "Exits the loop.",
        "option_3": "Restarts the loop.",
        "option_4": "Pauses the loop.",
        "answer": "Skips the current iteration."
    },
    {
        "question": "Which of the following functions is used to concatenate two strings in C?",
        "option_1": "strcat()",
        "option_2": "strjoin()",
        "option_3": "concat()",
        "option_4": "append()",
        "answer": "strcat()"
    },
    {
        "question": "Which statement correctly initializes a pointer to an integer?",
        "option_1": "int *ptr = &var;",
        "option_2": "int ptr = var;",
        "option_3": "int *ptr = var;",
        "option_4": "ptr int = &var;",
        "answer": "int *ptr = &var;"
    },
    {
        "question": "Which of the following is the correct way to define a union in C?",
        "option_1": "union Name { int a; float b; };",
        "option_2": "struct Name { int a; float b; };",
        "option_3": "union Name { int a; float b; }[];",
        "option_4": "union Name; int a; float b;",
        "answer": "union Name { int a; float b; };"
    },
    {
        "question": "What is the output of 'printf(\"%d\", 10 / 3);' in C?",
        "option_1": "3",
        "option_2": "3.333",
        "option_3": "Error",
        "option_4": "10",
        "answer": "3"
    },
    {
        "question": "Which of the following is not a valid variable name in C?",
        "option_1": "1var",
        "option_2": "var1",
        "option_3": "_var",
        "option_4": "var_1",
        "answer": "1var"
    },
    {
        "question": "Which of the following is the correct way to access a member of a structure?",
        "option_1": "structVar.memberName",
        "option_2": "structVar->memberName",
        "option_3": "structVar.memberName()",
        "option_4": "structVar::memberName",
        "answer": "structVar.memberName"
    },
    {
        "question": "What is the result of the expression '5 == 5' in C?",
        "option_1": "1 (true)",
        "option_2": "0 (false)",
        "option_3": "Error",
        "option_4": "5",
        "answer": "1 (true)"
    },
    {
        "question": "Which function is used to copy a string in C?",
        "option_1": "strcpy()",
        "option_2": "copy()",
        "option_3": "strcopy()",
        "option_4": "clone()",
        "answer": "strcpy()"
    },
    {
        "question": "Which statement correctly compares two integers?",
        "option_1": "if (a == b)",
        "option_2": "if a == b",
        "option_3": "if (a = b)",
        "option_4": "if (a === b)",
        "answer": "if (a == b)"
    },
    {
        "question": "Which of the following will cause a segmentation fault in C?",
        "option_1": "Accessing an invalid memory location.",
        "option_2": "Using a null pointer.",
        "option_3": "Array index out of bounds.",
        "option_4": "All of the above.",
        "answer": "All of the above."
    },
    {
        "question": "What does the 'sizeof(int)' function return?",
        "option_1": "The number of bytes used by an integer.",
        "option_2": "The maximum value of an integer.",
        "option_3": "The minimum value of an integer.",
        "option_4": "The size of a string.",
        "answer": "The number of bytes used by an integer."
    },
    {
        "question": "What is the default return value of a function in C if no return value is specified?",
        "option_1": "Undefined behavior",
        "option_2": "0",
        "option_3": "NULL",
        "option_4": "Error",
        "answer": "Undefined behavior"
    },
    {
        "question": "What is the correct syntax for declaring a function that takes two integer arguments and returns an integer?",
        "option_1": "int functionName(int a, int b);",
        "option_2": "function int functionName(int a, int b);",
        "option_3": "int functionName(int a, b);",
        "option_4": "functionName(int a, int b): int;",
        "answer": "int functionName(int a, int b);"
    },
    {
        "question": "Which of the following is a valid way to use the 'return' statement?",
        "option_1": "return 0;",
        "option_2": "return;",
        "option_3": "return (a + b);",
        "option_4": "All of the above.",
        "answer": "All of the above."
    },
    {
        "question": "Which library function is used to convert a string to an integer?",
        "option_1": "atoi()",
        "option_2": "strtol()",
        "option_3": "convert()",
        "option_4": "stringToInt()",
        "answer": "atoi()"
    },
    {
        "question": "What is the result of '5 & 3' in C?",
        "option_1": "1",
        "option_2": "3",
        "option_3": "5",
        "option_4": "7",
        "answer": "1"
    },
    {
        "question": "Which of the following is not a valid control structure in C?",
        "option_1": "if-else",
        "option_2": "for loop",
        "option_3": "switch-case",
        "option_4": "case-switch",
        "answer": "case-switch"
    },
    {
        "question": "Which keyword is used to define a generic type in C?",
        "option_1": "void",
        "option_2": "generic",
        "option_3": "type",
        "option_4": "any",
        "answer": "void"
    },
    {
        "question": "What is the maximum size of an array in C?",
        "option_1": "Depends on the system's memory.",
        "option_2": "Depends on the data type.",
        "option_3": "1024 elements.",
        "option_4": "No limit.",
        "answer": "Depends on the system's memory."
    },
    {
        "question": "Which of the following is the correct syntax for a do-while loop?",
        "option_1": "do { // code } while (condition);",
        "option_2": "do while (condition) { // code };",
        "option_3": "while (condition) { // code } do;",
        "option_4": "do { // code } until (condition);",
        "answer": "do { // code } while (condition);"
    },
    {
        "question": "What is the output of 'printf(\"%d\", 4 * 5);' in C?",
        "option_1": "20",
        "option_2": "45",
        "option_3": "Error",
        "option_4": "4 * 5",
        "answer": "20"
    },
    {
        "question": "Which of the following data types can hold decimal values in C?",
        "option_1": "float",
        "option_2": "int",
        "option_3": "char",
        "option_4": "double",
        "answer": "float"
    },
    {
        "question": "Which keyword is used to declare a macro in C?",
        "option_1": "#define",
        "option_2": "macro",
        "option_3": "const",
        "option_4": "define",
        "answer": "#define"
    },
    {
        "question": "What is the purpose of the 'volatile' keyword in C?",
        "option_1": "To prevent compiler optimization on a variable.",
        "option_2": "To declare a constant.",
        "option_3": "To define a function.",
        "option_4": "To allocate memory.",
        "answer": "To prevent compiler optimization on a variable."
    },
    {
        "question": "Which of the following is a standard library in C for mathematical operations?",
        "option_1": "<math.h>",
        "option_2": "<stdlib.h>",
        "option_3": "<string.h>",
        "option_4": "<stdio.h>",
        "answer": "<math.h>"
    },
    {
        "question": "What is the purpose of the 'extern' keyword in C?",
        "option_1": "To declare a variable that is defined elsewhere.",
        "option_2": "To define a constant.",
        "option_3": "To declare a function.",
        "option_4": "To create a macro.",
        "answer": "To declare a variable that is defined elsewhere."
    },
    {
        "question": "What does the 'break' statement do in a switch statement?",
        "option_1": "Exits the switch statement.",
        "option_2": "Continues to the next case.",
        "option_3": "Pauses execution.",
        "option_4": "Skips the next case.",
        "answer": "Exits the switch statement."
    },
    {
        "question": "Which of the following is a correct way to declare a function pointer in C?",
        "option_1": "int (*funcPtr)(int, int);",
        "option_2": "int funcPtr(int, int);",
        "option_3": "int funcPtr[];",
        "option_4": "int *funcPtr();",
        "answer": "int (*funcPtr)(int, int);"
    },
    {
        "question": "What is the correct way to include a library in C?",
        "option_1": "#include <library.h>",
        "option_2": "include <library.h>",
        "option_3": "import library.h",
        "option_4": "using library.h",
        "answer": "#include <library.h>"
    },
    {
        "question": "What does 'NULL' represent in C?",
        "option_1": "A null pointer.",
        "option_2": "An undefined variable.",
        "option_3": "An empty string.",
        "option_4": "A boolean value.",
        "answer": "A null pointer."
    },
    {
        "question": "Which of the following is used to handle exceptions in C?",
        "option_1": "C does not support exceptions.",
        "option_2": "try-catch blocks",
        "option_3": "throw statements",
        "option_4": "error codes",
        "answer": "C does not support exceptions."
    },
    {
        "question": "What is the purpose of the 'static' keyword in C?",
        "option_1": "To restrict the scope of a variable to the file.",
        "option_2": "To create a constant.",
        "option_3": "To define a function.",
        "option_4": "To allocate memory.",
        "answer": "To restrict the scope of a variable to the file."
    },
    {
        "question": "Which of the following can be used to iterate over elements of an array in C?",
        "option_1": "for loop",
        "option_2": "while loop",
        "option_3": "do-while loop",
        "option_4": "All of the above.",
        "answer": "All of the above."
    },
    {
        "question": "Which of the following is a correct way to define a recursive function in C?",
        "option_1": "functionName() { functionName(); }",
        "option_2": "void functionName() { functionName(); }",
        "option_3": "int functionName() { return functionName(); }",
        "option_4": "functionName() { return functionName; }",
        "answer": "void functionName() { functionName(); }"
    },
    {
        "question": "What is the output of 'printf(\"%d\", 10 % 3);' in C?",
        "option_1": "1",
        "option_2": "3",
        "option_3": "Error",
        "option_4": "10",
        "answer": "1"
    },
    {
        "question": "Which of the following is not a valid pointer type in C?",
        "option_1": "int*",
        "option_2": "char*",
        "option_3": "void*",
        "option_4": "string*",
        "answer": "string*"
    },
    {
        "question": "What is the effect of the 'const' keyword in C?",
        "option_1": "It makes a variable read-only.",
        "option_2": "It allows a variable to change.",
        "option_3": "It defines a constant value.",
        "option_4": "It creates a macro.",
        "answer": "It makes a variable read-only."
    },
    {
        "question": "Which of the following statements is true about local variables in C?",
        "option_1": "They are only accessible within the function where they are defined.",
        "option_2": "They retain their value between function calls.",
        "option_3": "They are accessible throughout the program.",
        "option_4": "They are initialized to zero by default.",
        "answer": "They are only accessible within the function where they are defined."
    },
    {
        "question": "Which of the following is the correct way to free allocated memory in C?",
        "option_1": "free(pointer);",
        "option_2": "delete pointer;",
        "option_3": "deallocate(pointer);",
        "option_4": "remove(pointer);",
        "answer": "free(pointer);"
    }
]
